@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject OrderSettings orderSettings
@inject IStoreContext storeContext
@inject Nop.Services.Helpers.IUserAgentHelper userAgent


    <div class="cart-wrapper-area py-3">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentBefore })
        @await Html.PartialAsync("_OrderReviewData", Model.OrderReviewData)
        @if (Model.Items.Count > 0)
        {
            if (Model.Warnings.Count > 0)
            {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in Model.Warnings)
                        {
                            <li>@warning</li>
                        }
                    </ul>
                </div>
            }
            <form asp-route="ShoppingCart" method="post" enctype="multipart/form-data" id="shopping-cart-form">
                <div class="cart-table card mb-3">
                    <div class="table-responsive card-body">
                        <table class="table mb-0">
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    decimal TDiscount = !string.IsNullOrEmpty(item.Discount) ? decimal.Parse(item.Discount) : 0;//convert discount in to decimal form
                                    decimal TSalling = !string.IsNullOrEmpty(item.SubTotal) ? decimal.Parse(item.SubTotal) : 0;
                                    decimal TotalMrp = TSalling + TDiscount;
                                    double disc = TDiscount > 0 ? (Convert.ToDouble((TDiscount * 100) / TotalMrp)) : 0;


                                    <tr>
                                        <td align="center">
                                            @if (Model.ShowProductImages)
                                            {

                                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">
                                                    <img alt="@item.Picture.AlternateText" class="rounded" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                                </a>

                                            }
                                            <br>
                                            @if (Model.ShowSku)
                                            {
                                                <label class="td-title">@T("ShoppingCart.SKU"):</label>
                                                <span class="sku-number">@item.Sku</span>
                                            }
                                            <br />
                                            @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                            {
                                                <div class="attributes">
                                                    @Html.Raw(item.AttributeInfo)
                                                </div>
                                            }
                                            <br>
                                            @if (Model.IsEditable)
                                            {

                                                @if (item.DisableRemoval)
                                                {
                                                    <text>&nbsp;</text>
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="removefromcart" id="removefromcart@(item.Id)" value="@(item.Id)" aria-label="@T("ShoppingCart.Remove")" />
                                                    <a name="updatecart" href="javascript:void(0);" class="remove-btn" onclick="$('#removefromcart@(item.Id)').attr('checked', true);">
                                                        <i class="fa fa-trash"></i>
                                                    </a>
                                                }

                                            }

                                        </td>
                                        <td>

                                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>

                                            <br>
                                            <span>@item.UnitPrice</span>
                                            <br>
                                            <del>@item.SubTotal</del> <i><small style="color:#ed1890;">@disc<br />@item.Discount</small></i>
                                        </td>
                                        <td>
                                            <div class="cart-form">
                                                @if (Model.IsEditable)
                                                {
                                                    if (item.AllowedQuantities.Count > 0)
                                                    {
                                                        <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown">
                                                            @foreach (var qty in item.AllowedQuantities)
                                                            {
                                                                <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                            }
                                                        </select>
                                                    }
                                                    else
                                                    {
                                                        <div class="order-plus-minus d-flex">
                                                            <div class="quantity-button-handler">-</div>
                                                            <input class="form-control cart-quantity-input" type="text" step="1" name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" aria-label="@T("ShoppingCart.Quantity")" />
                                                            <div class="quantity-button-handler">+</div>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="product-quantity">@item.Quantity</span>
                                                }
                                            </div>
                                        </td>

                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
                @if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                {
                    var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                    <div class="card coupon-card mb-3">
                        <div class="card-body">
                            <div class="apply-coupon">

                                <div class="coupon-form">

                                    <div class="tax-shipping-info">
                                        @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.IsEditable)
                {

                    <div class="card coupon-card mb-3">
                        <div class="card-body">
                            <div class="apply-coupon">

                                <div class="coupon-form">

                                    <div class="common-buttons">
                                        <button type="submit" name="updatecart" class="button-2 update-cart-button">@T("ShoppingCart.UpdateCart")</button>

                                        <button type="submit" name="continueshopping" class="button-2 continue-shopping-button">@T("ShoppingCart.ContinueShopping")</button>
                                        @await Component.InvokeAsync("ShoppingCartEstimateShipping")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.IsEditable)
                {

                    <div class="card coupon-card mb-3">
                        <div class="card-body">
                            @await Html.PartialAsync("_CheckoutAttributes", Model)
                            @await Html.PartialAsync("_CheckoutAttributes", Model)
                        </div>
                    </div>
                }



                @await Html.PartialAsync("_DiscountBox", Model.DiscountBox)
                @await Html.PartialAsync("_GiftCardBox", Model.GiftCardBox)
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryContentDeals })
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderSummaryTotals })
                @await Component.InvokeAsync("OrderTotals", new { isEditable = Model.IsEditable })
                @if (Model.IsEditable)
                {
                    <div class="card cart-amount-area">
                        @if (Model.TermsOfServiceOnShoppingCartPage)
                        {
                            <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display: none;">
                                <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                            </div>
                            <div class="terms-of-service">
                                <input id="termsofservice" type="checkbox" name="termsofservice" />
                                <label for="termsofservice">@T("Checkout.TermsOfService.IAccept")</label>
                                @if (Model.TermsOfServicePopup)
                                {
                                    <a class="read" id="read-terms">@T("Checkout.TermsOfService.Read")</a>
                                    <script asp-location="Footer">
                                        $(document).ready(function() {
                                            $('#read-terms').on('click',
                                                function(e) {
                                                    e.preventDefault();
                                                    displayPopupContentFromUrl(
                                                        '@Url.RouteUrl("TopicPopup", new { SystemName = "conditionsofuse" })',
                                                        '@T("Checkout.TermsOfService")');
                                                });
                                        });
                                    </script>
                                }
                                else
                                {
                                    <a class="read" id="read-terms" href="@Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("conditionsofuse") })">@T("Checkout.TermsOfService.Read")</a>
                                }
                            </div>
                        }
                        <div class="card-body d-flex align-items-center justify-content-between">

                            @if (string.IsNullOrEmpty(Model.MinOrderSubtotalWarning) && !Model.HideCheckoutButton)
                            {
                                <script asp-location="Footer">
                                    $(document).ready(function () {
                                        $('#checkout').on('click', function () {
                                            //terms of service
                                            var termOfServiceOk = true;
                                            if ($('#termsofservice').length > 0) {
                                                //terms of service element exists
                                                if (!$('#termsofservice').is(':checked')) {
                                                    $("#terms-of-service-warning-box").dialog();
                                                    termOfServiceOk = false;
                                                } else {
                                                    termOfServiceOk = true;
                                                }
                                            }
                                            return termOfServiceOk;
                                        });
                                    });
                                </script>
                                if (orderSettings.CheckoutDisabled)
                                {
                                    <div class="checkout-disabled">
                                        @T("Checkout.Disabled")
                                    </div>
                                }
                                else
                                {
                                    <button type="submit" id="checkout" name="checkout" value="checkout" style="background-color:#ed1890; color:#fff;">
                                        @T("Checkout.Button")
                                    </button>
                                }
                            }
                        </div>
                    </div>
                }


            </form>
        }
    </div>
