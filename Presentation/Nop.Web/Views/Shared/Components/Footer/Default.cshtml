@model FooterModel
@using Nop.Services.Helpers
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject Nop.Core.IWebHelper webHelper
@inject IUserAgentHelper useragent
@inject IWorkContext workContext
@{ var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
            ? url.ToString()
            : webHelper.GetRawUrl(Context.Request);
    bool IsUserAUthenticated = Context.User.Identity.IsAuthenticated;
}
@if (useragent.IsMobileDevice())
{
    <div class="internet-connection-status" id="internetStatus"></div>

    <div class="footer-nav-area" id="footerNav">
        <div class="container h-100 px-0">
            <div class="suha-footer-nav h-100">
                <ul class="h-100 d-flex align-items-center justify-content-between ps-0">
                    <li class="active"><a href="/"><i class="lni lni-home"></i>Home</a></li>
                    <li><a href="@Url.RouteUrl("ManufacturerList")"><i class="lni lni-life-ring"></i>Brands</a></li>
                    <li><a href="/wishlist"><i class="lni lni-heart"></i>Wishlist</a></li>
                    <li><a href="/cart"><i class="lni lni-shopping-basket"><sup></sup></i>Cart </a></li>
                    <li><a href="@Html.Raw(IsUserAUthenticated ? Url.RouteUrl("CustomerInfo") : Url.RouteUrl("Login", new {  returnUrl  }))"><i class="lni lni-user"></i>Profile</a></li>
                </ul>
            </div>
        </div>
    </div>
}
else
{

    <div class="footer">
        <div class="footer-upper">
            <div class="footer-block information">
                <div class="title">
                    <strong>@T("Footer.Information")</strong>
                </div>
                <ul class="list">
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block customer-service">
                <div class="title">
                    <strong>@T("Footer.CustomerService")</strong>
                </div>
                <ul class="list">
                    @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                    }
                    @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                    }
                    @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                    }
                    @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                    }
                    @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                    }
                    @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                    }
                    @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                    }
                    @if (Model.AllowCustomersToCheckGiftCardBalance)
                    {
                        <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block my-account">
                <div class="title">
                    <strong>@T("Footer.MyAccount")</strong>
                </div>
                <ul class="list">
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                    }
                    @if (Model.DisplayCustomerOrdersFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                    }
                    @if (Model.DisplayCustomerAddressesFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                    }
                    @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                    }
                    @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block follow-us">
                <div class="social">
                    <div class="title">
                        <strong>@T("Footer.FollowUs")</strong>
                    </div>
                    @await Component.InvokeAsync("SocialButtons")
                </div>
                @await Component.InvokeAsync("NewsletterBox")
            </div>
        </div>
        <div class="footer-lower">
            <div class="footer-info">
                <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
                @if (Model.DisplayTaxShippingInfoFooter)
                {
                    var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                    <span class="footer-tax-shipping">
                        @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
                    </span>
                }
            </div>
            @if (!Model.HidePoweredByNopCommerce)
            {
                <div class="footer-powered-by">
                    @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                        Please find more info at https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
                    Powered by <a href="~/">Womancart</a>
                </div>
            }
            @await Component.InvokeAsync("StoreThemeSelector")
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
    </div>
    <a id="scroll-top" href="#top" title="Top" role="button" class="scroll-top"><i class="d-icon-arrow-up"></i></a>
}
<script asp-location="Footer">
    $(document).ready(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });
</script>