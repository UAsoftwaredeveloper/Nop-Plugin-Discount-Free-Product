@model CustomerRewardPointsModel
@{
    Layout = "_ColumnsThree";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-reward-points-page");
}
@inject Nop.Services.Helpers.IUserAgentHelper userAgent
@section left
    {
    @if (userAgent.IsMobileDevice())
    {

    }
    else
    {
        @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Info })
    }
}
@if (userAgent.IsMobileDevice())
{

    <div class="vendor-details-wrap bg-img bg-overlay py-4" style="background-image: url('/lib/ClientM/img/pbg.jpg')">
        <div class="container">
            <div class="d-flex align-items-start">
                <div class="vendor-profile shadow me-3 mt-1">
                    <figure class="m-0"><img src="/lib/ClientM/img/fav.png"></figure>
                </div>

                <div class="vendor-info">
                    <h1 class="vendor-title text-white">@Model.RewardPointsBalance</h1>
                    <p class="mb-1 text-white"> Total Reward</p> 
                    @if (Model.MinimumRewardPointsBalance > 0)
                    {
                        <p class="text-white min-balance">@T("RewardPoints.MinimumBalance", Model.MinimumRewardPointsBalance, Model.MinimumRewardPointsAmount)</p>
                    }
                </div>
              
            </div>

        </div>
    </div>
    <div class="tab-content" id="vendorTabContent">

        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
            <div class="container">
                <br>
                <div class="billing-information-card mb-3">
                    <div class="card user-data-card">
                        <div class="card-body">
                            @if (Model.RewardPoints.Count > 0)
                            {
                                for (var i = 0; i < Model.RewardPoints.Count; i++)
                                {
                                    var item = Model.RewardPoints[i];
                                    <div class="single-profile-data d-flex align-items-center justify-content-between">
                                        <div class="title d-flex align-items-center">
                                            <span>Reward Point Use<br><small>Order No. #30</small></span>
                                        </div>
                                        <div class="data-content">50</div>
                                    </div>

                                    <div class="single-profile-data d-flex align-items-center justify-content-between">
                                        <div class="title d-flex align-items-center" style="color:#ed1890;">
                                            <span>Reward Point Earn<br><small>Expire : 30/01/2022</small></span>
                                        </div>
                                        <div class="data-content" style="color:#ed1890;">50</div>
                                    </div>

                                    <div class="single-profile-data d-flex align-items-center justify-content-between">
                                        <div class="title d-flex align-items-center">
                                            <span>@item.Message<br><small>Order No. #30</small></span>
                                        </div>
                                        <div class="data-content">50</div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="no-data">
                                    @T("RewardPoints.NoHistory")
                                </div>
                            }
                        </div>
                    </div>
                </div>


            </div>
        </div>


    </div>

}
else
{

    <div class="page account-page reward-points-page container">
        <div class="page-title">
            <h3>@T("Account.MyAccount") - @T("Account.RewardPoints")</h3>
        </div>
        <div class="page-body bg-white">
            <div class="reward-points-overview">
                <div class="current-balance">@T("RewardPoints.CurrentBalance", Model.RewardPointsBalance, Model.RewardPointsAmount)</div>
                @if (Model.MinimumRewardPointsBalance > 0)
                {
                    <div class="min-balance">@T("RewardPoints.MinimumBalance", Model.MinimumRewardPointsBalance, Model.MinimumRewardPointsAmount)</div>
                }
            </div>
            <div class="section reward-points-history">
                <div class="title">
                    <strong>@T("RewardPoints.History")</strong>
                </div>
                @if (Model.RewardPoints.Count > 0)
                {
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col style="width:20%" />
                                <col style="width:10%" />
                                <col style="width:10%" />
                                <col />
                                <col style="width:20%" />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="date">
                                        @T("RewardPoints.Fields.CreatedDate")
                                    </th>
                                    <th class="points">
                                        @T("RewardPoints.Fields.Points")
                                    </th>
                                    <th class="points-balance">
                                        @T("RewardPoints.Fields.PointsBalance")
                                    </th>
                                    <th class="message">
                                        @T("RewardPoints.Fields.Message")
                                    </th>
                                    <th class="endDate">
                                        @T("RewardPoints.Fields.EndDate")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.RewardPoints.Count; i++)
                                {
                                    var item = Model.RewardPoints[i];
                                    <tr @(i % 2 == 0 ? Html.Raw(" class=\"odd\"") : Html.Raw(" class=\"even\""))>
                                        <td class="date">
                                            @item.CreatedOn
                                        </td>
                                        <td class="points">
                                            @item.Points
                                        </td>
                                        <td class="points-balance">
                                            @item.PointsBalance
                                        </td>
                                        <td class="message">
                                            @item.Message
                                        </td>
                                        <td class="endDate">
                                            @item.EndDate
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    var pager = await Html.PagerAsync(Model.PagerModel);
                    if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
                    {
                        <div class="pager">
                            @pager
                        </div>
                    }
                }
                else
                {
                    <div class="no-data">
                        @T("RewardPoints.NoHistory")
                    </div>
                }
            </div>
        </div>
    </div>
}
